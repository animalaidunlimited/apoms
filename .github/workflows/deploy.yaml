# This is the CI action for the Apoms repo. The build must succeed and all tests must pass before any pull requests can be made.

name: Deploy
on:
  pull_request:
    types: closed
    branches:
      - develop
      - master

  workflow_dispatch:

permissions:
  id-token: write

jobs:

  deploy-develop:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    if: ${{ github.ref == 'refs/heads/develop' }}

    environment: develop

    steps:

      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
            create_credentials_file: 'true'
            workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
            service_account: ${{ secrets.DEPLOYMENT_SERVICE_ACCOUNT }}            
      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud services list

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Configure environments
        run: npm run configure:ci
        env:
          API_URL: ${{ secrets.API_URL }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          FIREBASE_SENDER_ID: ${{ secrets.FIREBASE_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          ANGULAR_FIRE_EMAIL: ${{ secrets.ANGULAR_FIRE_EMAIL }}
          ANGULAR_FIRE_PASSWORD: ${{ secrets.ANGULAR_FIRE_PASSWORD }}

      - name: Configure index.html
        run: npm run index-config:ci
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Build
        run: npm run build:ci
        env:
          NPM_CONFIG_ENVIRONMENT: ${{ secrets.NPM_CONFIG_ENVIRONMENT }}

      - name: Configure app.yaml
        run: npm run app-config:ci
        env:
          DEPLOYMENT_ENVIRONMENT: ${{ secrets.DEPLOYMENT_ENVIRONMENT }}
          PROJECT: ${{ secrets.PROJECT_ID }}

      - name: Deploy
        uses: google-github-actions/deploy-appengine@main
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          deliverables: dist/app.yaml
          promote: false


  deploy-main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    if: ${{ github.ref == 'refs/heads/master' }}

    environment: main

    steps:

      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
            create_credentials_file: 'true'
            workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
            service_account: ${{ secrets.DEPLOYMENT_SERVICE_ACCOUNT }}            
      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud services list

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Configure environments
        run: npm run configure:ci
        env:
          API_URL: ${{ secrets.API_URL }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          FIREBASE_SENDER_ID: ${{ secrets.FIREBASE_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          ANGULAR_FIRE_EMAIL: ${{ secrets.ANGULAR_FIRE_EMAIL }}
          ANGULAR_FIRE_PASSWORD: ${{ secrets.ANGULAR_FIRE_PASSWORD }}

      - name: Configure index.html
        run: npm run index-config:ci
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Build
        run: npm run build:ci
        env:
          NPM_CONFIG_ENVIRONMENT: ${{ secrets.NPM_CONFIG_ENVIRONMENT }}          

      - name: Configure app.yaml
        run: npm run app-config:ci
        env:
          DEPLOYMENT_ENVIRONMENT: ${{ secrets.DEPLOYMENT_ENVIRONMENT }}
          PROJECT: ${{ secrets.PROJECT_ID }}

      - name: Deploy
        uses: google-github-actions/deploy-appengine@main
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          credentials: ${{ secrets.GCP_SA_KEY }}
          deliverables: dist/app.yaml
          promote: true
